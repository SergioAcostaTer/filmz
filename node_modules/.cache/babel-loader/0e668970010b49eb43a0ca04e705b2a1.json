{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { API_KEY, API_URL } from \"./Slider\";\nimport React, { useState, useEffect } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Proves = () => {\n  _s();\n\n  const [movieProviders, setmovieProviders] = useState([]);\n  useEffect(() => {\n    fetch(`${API_URL}/company/${API_KEY}`).then(async response => await response.json()).then(data => setmovieProviders(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Proves, \"N0Li6IVoqM7bymGEFnzZzAu5V4c=\");\n\n_c = Proves;\nexport default Proves;\n\nvar _c;\n\n$RefreshReg$(_c, \"Proves\");","map":{"version":3,"names":["API_KEY","API_URL","React","useState","useEffect","Proves","movieProviders","setmovieProviders","fetch","then","response","json","data"],"sources":["C:/Users/Sergio/Desktop/react zone/zonapelicula/src/components/Proves.js"],"sourcesContent":["import { API_KEY, API_URL } from \"./Slider\";\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\n\r\nconst Proves = () => {\r\n\r\n    const [movieProviders, setmovieProviders] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`${API_URL}/company/${API_KEY}`)\r\n        .then(async response => await response.json())\r\n        .then(data => setmovieProviders(data))\r\n    }, []);\r\n\r\n   \r\n       \r\n    return(\r\n        <>\r\n            {/* {console.log(movieProviders)} */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Proves"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,UAAjC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAKA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAEjB,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;EAIAC,SAAS,CAAC,MAAM;IACZI,KAAK,CAAE,GAAEP,OAAQ,YAAWD,OAAQ,EAA/B,CAAL,CACCS,IADD,CACM,MAAMC,QAAN,IAAkB,MAAMA,QAAQ,CAACC,IAAT,EAD9B,EAECF,IAFD,CAEMG,IAAI,IAAIL,iBAAiB,CAACK,IAAD,CAF/B;EAGH,CAJQ,EAIN,EAJM,CAAT;EAQA,oBACI,qCADJ;AAKH,CAnBD;;GAAMP,M;;KAAAA,M;AAqBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}