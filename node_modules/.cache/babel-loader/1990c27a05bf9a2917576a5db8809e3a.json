{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergio\\\\Desktop\\\\react zone\\\\zonapelicula\\\\src\\\\components\\\\Panel.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nuseSta;\n\nconst Panel = prop => {\n  _s();\n\n  const [isHover, setIsHover] = useState(false);\n\n  const handleMouseEnter = () => {\n    setIsHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHover(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"listPanels-li\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          onMouseEnter: handleMouseEnter,\n          onMouseLeave: handleMouseLeave,\n          style: isHover ? `border: 2px solid ${prop.color}` : null,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: prop.image,\n            alt: prop.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, prop.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Panel, \"FTC8EpIspi2qaDtU9gFRhqZT02A=\");\n\n_c = Panel;\nexport default Panel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"names":["useSta","Panel","prop","isHover","setIsHover","useState","handleMouseEnter","handleMouseLeave","color","image","alt","id"],"sources":["C:/Users/Sergio/Desktop/react zone/zonapelicula/src/components/Panel.js"],"sourcesContent":["\r\nuseSta\r\n\r\nconst Panel = (prop) => {\r\n\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n   const handleMouseEnter = () => {\r\n      setIsHover(true);\r\n   };\r\n   const handleMouseLeave = () => {\r\n      setIsHover(false);\r\n   };\r\n\r\n    \r\n    return(\r\n        <>\r\n            \r\n            <li className='listPanels-li' key={prop.id}>\r\n                <a>\r\n                    <div className='panel'onMouseEnter={handleMouseEnter}\r\n            onMouseLeave={handleMouseLeave} style={isHover?`border: 2px solid ${prop.color}`:null}>\r\n                        <img src={prop.image} alt={prop.alt}></img>\r\n                    </div>\r\n                </a>\r\n            </li>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Panel  "],"mappings":";;;;;AACAA,MAAM;;AAEN,MAAMC,KAAK,GAAIC,IAAD,IAAU;EAAA;;EAEpB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,KAAD,CAAtC;;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC5BF,UAAU,CAAC,IAAD,CAAV;EACF,CAFD;;EAGA,MAAMG,gBAAgB,GAAG,MAAM;IAC5BH,UAAU,CAAC,KAAD,CAAV;EACF,CAFD;;EAKC,oBACI;IAAA,uBAEI;MAAI,SAAS,EAAC,eAAd;MAAA,uBACI;QAAA,uBACI;UAAK,SAAS,EAAC,OAAf;UAAsB,YAAY,EAAEE,gBAApC;UACR,YAAY,EAAEC,gBADN;UACwB,KAAK,EAAEJ,OAAO,GAAE,qBAAoBD,IAAI,CAACM,KAAM,EAAjC,GAAmC,IADzE;UAAA,uBAEI;YAAK,GAAG,EAAEN,IAAI,CAACO,KAAf;YAAsB,GAAG,EAAEP,IAAI,CAACQ;UAAhC;YAAA;YAAA;YAAA;UAAA;QAFJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ,GAAmCR,IAAI,CAACS,EAAxC;MAAA;MAAA;MAAA;IAAA;EAFJ,iBADJ;AAcH,CA1BD;;GAAMV,K;;KAAAA,K;AA4BN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}