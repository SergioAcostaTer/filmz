{"ast":null,"code":"'use strict';\n\nvar qs = require('querystring'),\n    url = require('url'),\n    xtend = require('xtend');\n\nfunction hasRel(x) {\n  return x && x.rel;\n}\n\nfunction intoRels(acc, x) {\n  function splitRel(rel) {\n    acc[rel] = xtend(x, {\n      rel: rel\n    });\n  }\n\n  x.rel.split(/\\s+/).forEach(splitRel);\n  return acc;\n}\n\nfunction createObjects(acc, p) {\n  // rel=\"next\" => 1: rel 2: next\n  var m = p.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/);\n  if (m) acc[m[1]] = m[2];\n  return acc;\n}\n\nfunction parseLink(link) {\n  try {\n    var m = link.match(/<?([^>]*)>(.*)/),\n        linkUrl = m[1],\n        parts = m[2].split(';'),\n        parsedUrl = url.parse(linkUrl),\n        qry = qs.parse(parsedUrl.query);\n    parts.shift();\n    var info = parts.reduce(createObjects, {});\n    info = xtend(qry, info);\n    info.url = linkUrl;\n    return info;\n  } catch (e) {\n    return null;\n  }\n}\n\nmodule.exports = function (linkHeader) {\n  if (!linkHeader) return null;\n  return linkHeader.split(/,\\s*</).map(parseLink).filter(hasRel).reduce(intoRels, {});\n};","map":{"version":3,"names":["qs","require","url","xtend","hasRel","x","rel","intoRels","acc","splitRel","split","forEach","createObjects","p","m","match","parseLink","link","linkUrl","parts","parsedUrl","parse","qry","query","shift","info","reduce","e","module","exports","linkHeader","map","filter"],"sources":["C:/Users/Sergio/Desktop/react zone/zonapelicula/node_modules/parse-link-header/index.js"],"sourcesContent":["'use strict';\n\nvar qs = require('querystring')\n  , url = require('url')\n  , xtend = require('xtend');\n\nfunction hasRel(x) {\n  return x && x.rel;\n}\n\nfunction intoRels (acc, x) {\n  function splitRel (rel) {\n    acc[rel] = xtend(x, { rel: rel });\n  }\n\n  x.rel.split(/\\s+/).forEach(splitRel);\n\n  return acc;\n}\n\nfunction createObjects (acc, p) {\n  // rel=\"next\" => 1: rel 2: next\n  var m = p.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/)\n  if (m) acc[m[1]] = m[2];\n  return acc;\n}\n\nfunction parseLink(link) {\n  try {\n    var m         =  link.match(/<?([^>]*)>(.*)/)\n      , linkUrl   =  m[1]\n      , parts     =  m[2].split(';')\n      , parsedUrl =  url.parse(linkUrl)\n      , qry       =  qs.parse(parsedUrl.query);\n\n    parts.shift();\n\n    var info = parts\n      .reduce(createObjects, {});\n    \n    info = xtend(qry, info);\n    info.url = linkUrl;\n    return info;\n  } catch (e) {\n    return null;\n  }\n}\n\nmodule.exports = function (linkHeader) {\n  if (!linkHeader) return null;\n\n  return linkHeader.split(/,\\s*</)\n   .map(parseLink)\n   .filter(hasRel)\n   .reduce(intoRels, {});\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;AAAA,IACIC,GAAG,GAAGD,OAAO,CAAC,KAAD,CADjB;AAAA,IAEIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAFnB;;AAIA,SAASG,MAAT,CAAgBC,CAAhB,EAAmB;EACjB,OAAOA,CAAC,IAAIA,CAAC,CAACC,GAAd;AACD;;AAED,SAASC,QAAT,CAAmBC,GAAnB,EAAwBH,CAAxB,EAA2B;EACzB,SAASI,QAAT,CAAmBH,GAAnB,EAAwB;IACtBE,GAAG,CAACF,GAAD,CAAH,GAAWH,KAAK,CAACE,CAAD,EAAI;MAAEC,GAAG,EAAEA;IAAP,CAAJ,CAAhB;EACD;;EAEDD,CAAC,CAACC,GAAF,CAAMI,KAAN,CAAY,KAAZ,EAAmBC,OAAnB,CAA2BF,QAA3B;EAEA,OAAOD,GAAP;AACD;;AAED,SAASI,aAAT,CAAwBJ,GAAxB,EAA6BK,CAA7B,EAAgC;EAC9B;EACA,IAAIC,CAAC,GAAGD,CAAC,CAACE,KAAF,CAAQ,2BAAR,CAAR;EACA,IAAID,CAAJ,EAAON,GAAG,CAACM,CAAC,CAAC,CAAD,CAAF,CAAH,GAAYA,CAAC,CAAC,CAAD,CAAb;EACP,OAAON,GAAP;AACD;;AAED,SAASQ,SAAT,CAAmBC,IAAnB,EAAyB;EACvB,IAAI;IACF,IAAIH,CAAC,GAAYG,IAAI,CAACF,KAAL,CAAW,gBAAX,CAAjB;IAAA,IACIG,OAAO,GAAMJ,CAAC,CAAC,CAAD,CADlB;IAAA,IAEIK,KAAK,GAAQL,CAAC,CAAC,CAAD,CAAD,CAAKJ,KAAL,CAAW,GAAX,CAFjB;IAAA,IAGIU,SAAS,GAAIlB,GAAG,CAACmB,KAAJ,CAAUH,OAAV,CAHjB;IAAA,IAIII,GAAG,GAAUtB,EAAE,CAACqB,KAAH,CAASD,SAAS,CAACG,KAAnB,CAJjB;IAMAJ,KAAK,CAACK,KAAN;IAEA,IAAIC,IAAI,GAAGN,KAAK,CACbO,MADQ,CACDd,aADC,EACc,EADd,CAAX;IAGAa,IAAI,GAAGtB,KAAK,CAACmB,GAAD,EAAMG,IAAN,CAAZ;IACAA,IAAI,CAACvB,GAAL,GAAWgB,OAAX;IACA,OAAOO,IAAP;EACD,CAfD,CAeE,OAAOE,CAAP,EAAU;IACV,OAAO,IAAP;EACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAAUC,UAAV,EAAsB;EACrC,IAAI,CAACA,UAAL,EAAiB,OAAO,IAAP;EAEjB,OAAOA,UAAU,CAACpB,KAAX,CAAiB,OAAjB,EACLqB,GADK,CACDf,SADC,EAELgB,MAFK,CAEE5B,MAFF,EAGLsB,MAHK,CAGEnB,QAHF,EAGY,EAHZ,CAAP;AAID,CAPD"},"metadata":{},"sourceType":"script"}